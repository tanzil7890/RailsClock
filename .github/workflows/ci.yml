name: RailsClocks CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Ruby ${{ matrix.ruby }} / Rails ${{ matrix.rails }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby: ['2.7', '3.0', '3.1', '3.2']
        rails: ['6.1', '7.0', '7.1']
        exclude:
          - ruby: '2.7'
            rails: '7.1'

    env:
      RAILS_ENV: test
      BUNDLE_GEMFILE: gemfiles/rails_${{ matrix.rails }}.gemfile

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true

    - name: Install dependencies
      run: |
        gem install bundler
        bundle config set --local without 'development'
        bundle install --jobs 4 --retry 3

    - name: Setup test database
      run: |
        bundle exec rake db:create
        bundle exec rake db:schema:load

    - name: Run tests
      run: bundle exec rspec --format progress

    - name: Run RuboCop
      run: bundle exec rubocop --parallel

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Run RuboCop
      run: |
        bundle install
        bundle exec rubocop --parallel

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Install Brakeman
      run: gem install brakeman

    - name: Run Brakeman
      run: brakeman -A -z

    - name: Run Bundle Audit
      run: |
        gem install bundler-audit
        bundle audit check --update

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Generate Documentation
      run: |
        gem install yard
        yard doc --output-dir ./doc

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./doc
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        commit_message: 'docs: update documentation'

  publish:
    needs: [test, lint, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Build and publish gem
      env:
        GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
      run: |
        gem build *.gemspec
        gem push *.gem

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          *.gem
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: [test, lint, security, docs]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Notify on Success
      if: ${{ success() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: 'RailsClocks CI Pipeline completed successfully :rocket:'
        SLACK_COLOR: good

    - name: Notify on Failure
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: 'RailsClocks CI Pipeline failed :x:'
        SLACK_COLOR: danger